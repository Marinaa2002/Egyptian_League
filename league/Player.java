/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

package egyptian.league;

import java.awt.Color;
import java.awt.event.InputEvent;
import java.sql.Connection;
import java.sql.DriverManager;
import static java.sql.JDBCType.DOUBLE;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JMenuItem;
import javax.swing.JOptionPane;
import javax.swing.KeyStroke;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author Marina
 */
public class Player extends javax.swing.JFrame {

    /**
     * Creates new form Gui
     */
    public Player() {
        initComponents();
        selectional();
        setLocation(400, 300);

        //SetRecordToTable();
    }
    private Connection mycon = null;
    private Statement mystat = null;
    private ResultSet myres = null;
    private DefaultTableModel model;
    
    
    public void selectional(){
        try {
            mycon = DriverManager.getConnection("jdbc:derby://localhost:1527/Egyption league", "team", "123456");
            mystat = mycon.createStatement();
            myres = mystat.executeQuery("Select * from TEAM.PLAYER");
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
        
        } catch (SQLException ex) {
            System.err.println("conection err");
            ex.printStackTrace();
        }
    
    }
    public void refreshTable(){
    
        try{
            String query = "Select * from TEAM.PLAYER ";
            PreparedStatement pst = mycon.prepareStatement(query);
            myres = pst.executeQuery();
            //pst.setString(1, Key2Txt.getText());
            //pst.setString(1, String.valueOf(IDTxt.getText()));
            myres = pst.executeQuery();
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
            pst.close();
            myres.close();
        } catch(SQLException ex){
           ex.printStackTrace();
        }
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jMenuItem1 = new javax.swing.JMenuItem();
        jScrollPane1 = new javax.swing.JScrollPane();
        Mytable = new javax.swing.JTable();
        TYPETxt = new javax.swing.JTextField();
        NAMETxt = new javax.swing.JTextField();
        NUMBERTxt = new javax.swing.JTextField();
        TEAMTxt = new javax.swing.JTextField();
        AGETxt = new javax.swing.JTextField();
        SCORETxt = new javax.swing.JTextField();
        RANKTxt = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        Key1Txt = new javax.swing.JTextField();
        Key2Txt = new javax.swing.JTextField();
        Key3Txt = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jComboBox1 = new javax.swing.JComboBox();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        by_goals = new javax.swing.JMenuItem();
        by_goalkeeper = new javax.swing.JMenuItem();
        by_ranks_MItem = new javax.swing.JMenuItem();

        jMenuItem1.setText("jMenuItem1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        Mytable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null}
            },
            new String [] {
                "NAME", "NUMBER", "TEAM", "TYPE", "AGE", "SCORE", "RANK"
            }
        ));
        jScrollPane1.setViewportView(Mytable);

        TYPETxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TYPETxtActionPerformed(evt);
            }
        });

        AGETxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                AGETxtActionPerformed(evt);
            }
        });

        SCORETxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SCORETxtActionPerformed(evt);
            }
        });

        RANKTxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RANKTxtActionPerformed(evt);
            }
        });

        jLabel1.setText("TYPE");

        jLabel2.setText("NAME");

        jLabel3.setText("NUMBER");

        jLabel4.setText("TEAM");

        jLabel5.setText("AGE");

        jLabel6.setText("SCORE");

        jLabel7.setText("RANK");

        Key1Txt.setForeground(new java.awt.Color(153, 153, 153));
        Key1Txt.setText("Search by Name");
        Key1Txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Key1TxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Key1TxtFocusLost(evt);
            }
        });
        Key1Txt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Key1TxtActionPerformed(evt);
            }
        });
        Key1Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Key1TxtKeyReleased(evt);
            }
        });

        Key2Txt.setForeground(new java.awt.Color(153, 153, 153));
        Key2Txt.setText("Search by Number");
        Key2Txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Key2TxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Key2TxtFocusLost(evt);
            }
        });
        Key2Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Key2TxtKeyReleased(evt);
            }
        });

        Key3Txt.setForeground(new java.awt.Color(153, 153, 153));
        Key3Txt.setText("Search by Team");
        Key3Txt.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                Key3TxtFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                Key3TxtFocusLost(evt);
            }
        });
        Key3Txt.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                Key3TxtKeyReleased(evt);
            }
        });

        jButton1.setText("Add");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("Update");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setText("Display");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setText("BACK");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jToggleButton1.setText("Delete");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "goalkeeper", "forward", "midfielder", "defender" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        jMenu1.setText("Display");

        by_goals.setText("by goals");
        by_goals.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                by_goalsActionPerformed(evt);
            }
        });
        jMenu1.add(by_goals);

        by_goalkeeper.setText("goal keepers");
        by_goalkeeper.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                by_goalkeeperActionPerformed(evt);
            }
        });
        jMenu1.add(by_goalkeeper);

        by_ranks_MItem.setText("by Ranks");
        by_ranks_MItem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                by_ranks_MItemActionPerformed(evt);
            }
        });
        jMenu1.add(by_ranks_MItem);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(Key1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(47, 47, 47)
                        .addComponent(Key2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(36, 36, 36)
                        .addComponent(Key3Txt, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jButton4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jButton1)
                                .addGap(41, 41, 41)
                                .addComponent(jToggleButton1)
                                .addGap(30, 30, 30)
                                .addComponent(jButton2)
                                .addGap(41, 41, 41)
                                .addComponent(jButton3))
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 532, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(55, 55, 55)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel6)
                    .addComponent(jLabel2)
                    .addComponent(jLabel5)
                    .addComponent(jLabel7)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 28, Short.MAX_VALUE)
                .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(TYPETxt, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(NAMETxt, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE)
                            .addComponent(NUMBERTxt)
                            .addComponent(TEAMTxt))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(RANKTxt, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(SCORETxt, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(AGETxt, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 123, Short.MAX_VALUE))))
                .addGap(97, 97, 97))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(NAMETxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(NUMBERTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(TEAMTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(TYPETxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(AGETxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(SCORETxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(21, 21, 21)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(RANKTxt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(126, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(Key1Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Key2Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Key3Txt, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 236, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton3)
                    .addComponent(jButton2)
                    .addComponent(jToggleButton1)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void TYPETxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TYPETxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TYPETxtActionPerformed

    private void SCORETxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SCORETxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SCORETxtActionPerformed

    private void RANKTxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RANKTxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_RANKTxtActionPerformed

    private void Key1TxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Key1TxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Key1TxtActionPerformed

    private void Key1TxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Key1TxtFocusGained
        // TODO add your handling code here:
        if(Key1Txt.getText().equals("Search by Name")){
                Key1Txt.setText("");
                Key1Txt.setForeground(new Color(153,153,153));
            
            }
    }//GEN-LAST:event_Key1TxtFocusGained

    private void Key2TxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Key2TxtFocusGained
        // TODO add your handling code here:
        if(Key2Txt.getText().equals("Search by Number")){
                Key2Txt.setText("");
                Key2Txt.setForeground(new Color(153,153,153));
            
            }
    }//GEN-LAST:event_Key2TxtFocusGained

    private void Key3TxtFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Key3TxtFocusGained
        // TODO add your handling code here:
        if(Key3Txt.getText().equals("Search by Team")){
                Key3Txt.setText("");
                Key3Txt.setForeground(new Color(153,153,153));
            
            }
    }//GEN-LAST:event_Key3TxtFocusGained

    private void Key1TxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Key1TxtFocusLost
        // TODO add your handling code here:
        if(Key1Txt.getText().equals("")){
                Key1Txt.setText("Search by Name");
                Key1Txt.setForeground(new Color(153,153,153));
            
            }
    }//GEN-LAST:event_Key1TxtFocusLost

    private void Key2TxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Key2TxtFocusLost
        // TODO add your handling code here:
        if(Key2Txt.getText().equals("")){
                Key2Txt.setText("Search by Number");
                Key2Txt.setForeground(new Color(153,153,153));
            
            }
    }//GEN-LAST:event_Key2TxtFocusLost

    private void Key3TxtFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_Key3TxtFocusLost
        // TODO add your handling code here:
        if(Key3Txt.getText().equals("")){
                Key3Txt.setText("Search by Team");
                Key3Txt.setForeground(new Color(153,153,153));
            
            }
    }//GEN-LAST:event_Key3TxtFocusLost

    private void Key1TxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Key1TxtKeyReleased
        // TODO add your handling code here:
        try{
            String query = "Select * from TEAM.PLAYER where NAME=?";
            PreparedStatement pst = mycon.prepareStatement(query);
            pst.setString(1, Key1Txt.getText());
            //pst.setString(1, String.valueOf(IDTxt.getText()));
            myres = pst.executeQuery();
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
            pst.close();
        } catch(SQLException ex){
           ex.printStackTrace();
        }
    }//GEN-LAST:event_Key1TxtKeyReleased

    private void Key2TxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Key2TxtKeyReleased
        // TODO add your handling code here:
        try{
            String query = "Select * from TEAM.PLAYER where NUMBER=?";
            PreparedStatement pst = mycon.prepareStatement(query);
            pst.setString(1, Key2Txt.getText());
            //pst.setString(1, String.valueOf(IDTxt.getText()));
            myres = pst.executeQuery();
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
            pst.close();
        } catch(SQLException ex){
           ex.printStackTrace();
        }
    }//GEN-LAST:event_Key2TxtKeyReleased

    private void Key3TxtKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_Key3TxtKeyReleased
        // TODO add your handling code here:
        try{
            String query = "Select * from TEAM.PLAYER where TEAM=?";
            PreparedStatement pst = mycon.prepareStatement(query);
            pst.setString(1, Key3Txt.getText());
            //pst.setString(1, String.valueOf(IDTxt.getText()));
            myres = pst.executeQuery();
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
            pst.close();
        } catch(SQLException ex){
           ex.printStackTrace();
        }
    }//GEN-LAST:event_Key3TxtKeyReleased

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
     
            String NAME = NAMETxt.getText();
            int NUMBER = Integer.parseInt(NUMBERTxt.getText()) ;
            String TEAM = TEAMTxt.getText();
            String TYPE = TYPETxt.getText();
            int AGE = Integer.parseInt(AGETxt.getText()) ;
            int SCORE = Integer.parseInt(SCORETxt.getText()) ;
            String RANK = RANKTxt.getText();
            
           
        try {
            PreparedStatement add = mycon.prepareStatement("insert Into TEAM.PLAYER values (?,?,?,?,?,?,?)");
            add.setString(1, NAME);
            add.setInt(2, NUMBER);
            add.setString(3, TEAM);
            add.setString(4, TYPE);
            add.setInt(5, AGE);
            add.setInt(6, SCORE);
            //add.setString(7, RANK);
            add.setDouble(7, Double.parseDouble(RANKTxt.getText()) );

            int row = add.executeUpdate();
        } catch (SQLException ex) {
            System.err.println("ad error");
            ex.printStackTrace();
        }
            
          selectional();
          refreshTable();
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed

         String query;
         
        try {
            // TODO add your handling code here:
         String sql = "UPDATE TEAM.PLAYER SET NAME=?, TEAM=?, TYPE=?, AGE=?, SCORE=?, RANK=? WHERE NUMBER =?";
         PreparedStatement ps = mycon.prepareStatement(sql);
         ps.setString(1, NAMETxt.getText());
         ps.setString(2,TEAMTxt.getText());
          ps.setString(3,TYPETxt.getText());
         ps.setInt(4,Integer.parseInt(AGETxt.getText()));
         ps.setInt(5,Integer.parseInt(SCORETxt.getText()));
         ps.setInt(6,Integer.parseInt(RANKTxt.getText()));
         ps.setInt(7,Integer.parseInt(NUMBERTxt.getText()));
         int i=0;
         i = ps.executeUpdate();
         if(i>0)
             {
         //do   something   
             }
            
        } catch (SQLException ex) {
            ex.printStackTrace();
        }
         selectional();
        refreshTable();
        
          /*if(!NUMBERTxt.getText().equals("") && !TEAMTxt.getText().equals("")){
          
                 query = "UPDATE PLAYER SET TEAM = ? WHERE \"NUMBER\" = ?\n" +
"";
              try {
                     ps = mycon.prepareStatement(query);
                  ps.setString(1,TEAMTxt.getText() );
                  ps.setString(2, NUMBERTxt.getText());
                  int row = ps .executeUpdate();
              } catch (SQLException ex) {
                  //Logger.getLogger(Player.class.getName()).log(Level.SEVERE, null, ex);
                  System.err.println("team update err");
                  ex.printStackTrace();
              }
          
          }
          else if (!NUMBERTxt.getText().equals("") && !SCORETxt.getText().equals(""))
          {
              query = "UPDATE PLAYER SET SCORE = ? WHERE \"NUMBER\" = ?\n" +
"";
              try {
                     ps = mycon.prepareStatement(query);
                  ps.setString(1,SCORETxt.getText() );
                  ps.setString(2, NUMBERTxt.getText());
                  int row = ps .executeUpdate();
              } catch (SQLException ex) {
                  //Logger.getLogger(Player.class.getName()).log(Level.SEVERE, null, ex);
                  System.err.println("score update err");
                  ex.printStackTrace();
              }
          
          }
          else if(!NUMBERTxt.getText().equals("") && !RANKTxt.getText().equals("")){
              
              query = "UPDATE PLAYER SET RANK = ? WHERE \"NUMBER\" = ?\n" +
"";
              try {
                     ps = mycon.prepareStatement(query);
                  ps.setString(1,RANKTxt.getText() );
                  ps.setString(2, NUMBERTxt.getText());
                  int row = ps .executeUpdate();
              } catch (SQLException ex) {
                  //Logger.getLogger(Player.class.getName()).log(Level.SEVERE, null, ex);
                  System.err.println("rank update err");
                  ex.printStackTrace();
              }
            
                      
                      
              
              
          }*/

    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        String sql = "Select * From TEAM.PLAYER";
        try{
           PreparedStatement pst = mycon.prepareStatement(sql);
           myres = pst.executeQuery();
           DefaultTableModel model = (DefaultTableModel) Mytable.getModel();
           model.setRowCount(0);
           while(myres.next()){
                model.addRow(new String[] {myres.getString(1),myres.getString(2), myres.getString(3), myres.getString(4), myres.getString(5), myres.getString(6), myres.getString(7)});
           
           }
        
        } catch(SQLException ex){
           ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void AGETxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_AGETxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_AGETxtActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.setVisible(false);
        new MainMenu().setVisible(true);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void by_goalsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_by_goalsActionPerformed
        // TODO add your handling code here:
        by_goals = new JMenuItem("by goals",'g');
        by_goals.setAccelerator(KeyStroke.getKeyStroke('G' ,InputEvent.CTRL_DOWN_MASK));
        try{ 
        myres = mystat.executeQuery("Select * from TEAM.PLAYER ORDER by SCORE desc FETCH first 3 rows only");
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
        
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.err.println("error in goals");
        }
    }//GEN-LAST:event_by_goalsActionPerformed

    private void by_goalkeeperActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_by_goalkeeperActionPerformed
        // TODO add your handling code here:
        by_goalkeeper = new JMenuItem("by goalkeeper", 'k');
                by_goalkeeper.setAccelerator(KeyStroke.getKeyStroke('K' ,InputEvent.CTRL_DOWN_MASK));
                
                try{ 
        myres = mystat.executeQuery("select * from PLAYER where \"TYPE\" = 'goalkeeper' ORDER BY SCORE asc FETCH first 3 rows only");
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
        
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.err.println("error in goalkeeper");
        }
    }//GEN-LAST:event_by_goalkeeperActionPerformed

    private void by_ranks_MItemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_by_ranks_MItemActionPerformed
        // TODO add your handling code here:
        
        by_ranks_MItem = new JMenuItem("by Ranks",'r');
        by_ranks_MItem.setAccelerator(KeyStroke.getKeyStroke('R' ,InputEvent.CTRL_DOWN_MASK));
        try{ 
        myres = mystat.executeQuery("Select * from TEAM.PLAYER ORDER by RANK desc FETCH first 3 rows only");
            Mytable.setModel(DbUtils.resultSetToTableModel(myres));
        
        } catch (SQLException ex) {
            ex.printStackTrace();
            System.err.println("error in ranks");
        }
    }//GEN-LAST:event_by_ranks_MItemActionPerformed

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        // TODO add your handling code here:
        try {
        String query = "Delete from TEAM.PLAYER where NUMBER ="+NUMBERTxt.getText();
        Statement add = mycon.createStatement();
        add.executeUpdate(query);
        NAMETxt.setText("");
        NUMBERTxt.setText("");
        TEAMTxt.setText("");
        TYPETxt.setText("");
        AGETxt.setText("");
        SCORETxt.setText("");
        RANKTxt.setText("");
         } catch (SQLException ex) {
            // Logger.getLogger(add_uodate_delete.class.getName()).log(Level.SEVERE, null, ex);
             ex.printStackTrace();
         }
        selectional();
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
        String selectedvalue = jComboBox1.getSelectedItem().toString();
        TYPETxt.setText(selectedvalue);
    }//GEN-LAST:event_jComboBox1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Player.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Player().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    public static javax.swing.JTextField AGETxt;
    private javax.swing.JTextField Key1Txt;
    private javax.swing.JTextField Key2Txt;
    private javax.swing.JTextField Key3Txt;
    public javax.swing.JTable Mytable;
    public static javax.swing.JTextField NAMETxt;
    public static javax.swing.JTextField NUMBERTxt;
    public static javax.swing.JTextField RANKTxt;
    public static javax.swing.JTextField SCORETxt;
    public static javax.swing.JTextField TEAMTxt;
    public static javax.swing.JTextField TYPETxt;
    private javax.swing.JMenuItem by_goalkeeper;
    private javax.swing.JMenuItem by_goals;
    private javax.swing.JMenuItem by_ranks_MItem;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JComboBox jComboBox1;
    public static javax.swing.JLabel jLabel1;
    public static javax.swing.JLabel jLabel2;
    public static javax.swing.JLabel jLabel3;
    public static javax.swing.JLabel jLabel4;
    public static javax.swing.JLabel jLabel5;
    public static javax.swing.JLabel jLabel6;
    public static javax.swing.JLabel jLabel7;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JToggleButton jToggleButton1;
    // End of variables declaration//GEN-END:variables
}
